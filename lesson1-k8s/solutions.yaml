# Part-1

# Q1+3
# kubectl run superset --image=amancevice/superset
apiVersion: v1
kind: Pod
metadata:
  name: superset
  labels:
    app: superset
spec:
  containers:
    - name: superset
      image: amancevice/superset
      ports:
        - containerPort: 80
      resources:
        requests:
          memory: "64Mi"
          cpu: "250m"
        limits:
          memory: "128Mi"
          cpu: "500m"
---
# Q2+3
# kubectl expose pod superset --port=8080
apiVersion: v1
kind: Service
metadata:
  name: superset-svc
spec:
  type: NodePort
  selector:
    app: superset
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80
      nodePort: 30007
---
# Q4 + Bonus
# kubectl run airflow --image=puckel/docker-airflow
# kubectl expose pod airflow --port=8080
apiVersion: v1
kind: Pod
metadata:
  name: airflow
  labels:
    app: airflow
spec:
  containers:
    - name: airflow
      image: puckel/docker-airflow
      ports:
        - containerPort: 80
      resources:
        requests:
          memory: "64Mi"
          cpu: "250m"
        limits:
          memory: "128Mi"
          cpu: "500m"
      envFrom:
        - secretRef:
            name: airflow-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: airflow-config
  labels:
    app: airflow
data:
  LOAD_EX: "y"
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-svc
  labels:
    app: airflow
spec:
  selector:
    app: airflow
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 80
      nodePort: 30008
---
apiVersion: v1
kind: Pod
metadata:
  name: airflow-db
  labels:
    app: airflow
spec:
  containers:
    - name: airflow-db
      image: mysql
      resources:
        requests:
          memory: "64Mi"
          cpu: "250m"
        limits:
          memory: "128Mi"
          cpu: "500m"
---
# PART-2
apiVersion: v1
kind: Namespace
metadata:
  name: development
---
apiVersion: v1
kind: Namespace
metadata:
  name: production
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
